name: Terraform Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: "us-east-1"
  AWS_BACKEND_PROFILE: "central-profile"
  CENTRAL_BACKEND_ROLE_ARN: "arn:aws:iam::011624006725:role/GitHubAction-AssumeRoleWithAction"
  CURRENT_ACCOUNT_ROLE_ARN: "arn:aws:iam::011624006725:role/GitHubAction-AssumeRoleWithAction"

jobs:
  terraform-plan:
    name: Terraform Plan And Apply (if merged)
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        workspace: [mti] # Running for all environments

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Convert workspace to uppercase
        id: set_uppercase
        run: echo "UPPERCASE_WORKSPACE=$(echo ${{ matrix.workspace }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Get aws credentials for backend S3
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume:  ${{ env.CENTRAL_BACKEND_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      # set central-account profile
      - name: Access central S3 backend in
        run: |
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile ${{ env.AWS_BACKEND_PROFILE }}
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile ${{ env.AWS_BACKEND_PROFILE }}
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile ${{ env.AWS_BACKEND_PROFILE }}
          aws configure set region ${{ env.AWS_REGION }} --profile ${{ env.AWS_BACKEND_PROFILE }}  
        
      - name: List profiles
        run: |
          aws configure list-profiles

      - name: Configure aws credentials for current account
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.CURRENT_ACCOUNT_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan-${{ matrix.workspace }} -var-file="environments/${{ matrix.workspace }}/terraform.tfvars"

      # Apply only if the commit is in the main branch (merged PR)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -var-file="environments/${{ matrix.workspace }}/terraform.tfvars"
